1. 쓰레드에 대해서 설명해보세요
쓰레드란 CPU 가 처리하는 작업의 가장 작은 단위를 의미합니다
쓰레드에는 유저 공간에서 동작하는 쓰레드인 유저 쓰레드와 커널 공간에서 동작하는 커널 쓰레드로 나눌 수 있습니다

응용 프로그램이 생성한 쓰레드는 유저 공간에 있으므로 하드웨어에 접근할 수 없습니다
따라서 시스템 콜을 사용하여 OS 에게 작업 처리를 요청하게 됩니다
이때 OS 는 커널 공간에 쓰레드를 만들어 작업을 처리하고 결과를 반환합니다
이러한 일련의 과정이 쓰레딩 모델이며, 여기에는 다대일 모델, 일대일 모델, 다대다 모델이 포함됩니다

2. 멀티 쓰레딩과 멀티 프로세싱을 비교해보세요
멀티 프로세싱은 여러 개의 프로세스가 context switching 을 하는 것을 의미합니다
프로세스는 각각의 독립적 메모리 공간을 가지고 있으므로 시스템이 안정적으로 동작할 수 있습니다
다만 context switching 에 PCB 저장하는 오버헤드가 있다는 점, 
데이터 전송을 위해 IPC 를 사용해야 한다는 단점이 존재합니다

멀티 쓰레딩은 여러 개의 쓰레드가 context switching 을 하는 것을 의미합니다
쓰레드는 프로세스 내부에서 메모리를 공유(bss, 힙, 코드, 데이터) 하므로 쓰레드 간 
데이터 전송 속도가 빠르고 복잡하지 않습니다
또한 PCB 에 저장할 필요도 없으므로 context switching 오버헤드도 없다고 할 수 있습니다
다만 이 점은 개발자가 쓰레드 간 공유 데이터를 잘 관리해야한다는 전제 조건이 붙습니다

3. 코어가 뭔가요?
연산을 처리하는 프로세서를 의미합니다
코어의 개수에 따라서 싱글코어 환경, 멀티코어 환경으로 구분해볼 수 있습니다
싱글코어 환경에서는 프로세스나 쓰레드들이 스케줄에 따라서 코어를 번갈아가며 
점유합니다
반면 멀티코어 환경에서는 코어 개수에 따라서 공유할 필요없이 코어 별로 
쓰레드와 프로세스를 적절하게 분할하여 작업을 병렬로 처리할 수 있습니다

4. 병렬처리가 뭔가요?
전체 작업을 나누어서 처리하는 것을 의미합니다
각각의 쓰레드에 작업을 분배하게 되면 전체 작업 시간이 줄고, 모든 프로세서를 효율적으로 사용할 수 있습니다

다만 분할된 작업 간의 연산 균형과 작업 간의 의존성에 따라 작업 순서도 염두해야합니다
또한 작업에 필요한 데이터를 나누는 문제와 테스트 및 디버깅이 어렵다는 문제도 고려해야 합니다

